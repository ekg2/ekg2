<sect2>
   <title>Interfejs od strony interpretera</title>
   <sect3>
      <title>Modu³ ekg</title>
      <variablelist>
         <title>Metody i atrybuty modu³u</title>
         <varlistentry>
            <term>command( str )</term>
            <listitem>
               <para>
                  Wywo³anie polecenia ekg2
               </para>
            </listitem>
         </varlistentry>
         <varlistentry>
            <term>printf( format, args ...)</term>
            <listitem>
               <para>
                  Wy¶wietlenie tekstu w podanym formacie.
               </para>
            </listitem>
         </varlistentry>
         <varlistentry>
            <term>echo( str )</term>
            <listitem>
               <para>
                  Wy¶wietlenie tekstu w formacie generic
               </para>
            </listitem>
         </varlistentry>
         <varlistentry>
            <term>debug( format, args ... )</term>
            <listitem>
               <para>
                  Zapisanie danych debugowych w podanym formacie (notacja printf).
               </para>
            </listitem>
         </varlistentry>
         <varlistentry>
            <term>sessions()</term>
            <listitem>
               <para>
                  Zwraca listê obiektów typu <classname>session</classname> zawieraj±c± dostêpne sesje.
               </para>
            </listitem>
         </varlistentry>
         <varlistentry>
            <term>session_get( nazwa )</term>
            <listitem>
               <para>
                  Zwraca obiekt sesyjny sesji o podanej nazwie. Podnosi wyj±tek
                  <classname>RuntimeException</classname> je¶li takiej sesji nie ma.
               </para>
            </listitem>
         </varlistentry>
         <varlistentry>
            <term>session_current()</term>
            <listitem>
               <para>
                  Zwraca obiekt reprezentuj±cy bie¿±c± sesjê.
               </para>
            </listitem>
         </varlistentry>
         <varlistentry>
            <term>plugins()</term>
            <listitem>
               <para>
                  Zwraca listê zawieraj±ca za³adowane pluginy.
               </para>
            </listitem>
         </varlistentry>
         <varlistentry>
            <term>timer_bind( czas, callback )</term>
            <listitem>
               <para>
                  Wykonuje funkcjê <parameter>callback</parameter> co podany czas. Funkcja ta nie mo¿e
                  przyjmowaæ argumentów.
               </para>
            </listitem>
         </varlistentry>
         <varlistentry>
            <term>handler_bind( nazwa_sygna³u, callback )</term>
            <listitem>
               <para>
                  £±czy funkcjê <parameter>callback</parameter> z sygna³em o podanej nazwie. Funkcja
                  musi przyjmowaæ argumenty takie, jakie przesy³ane s± z
                  sygna³em.
               </para>
            </listitem>
         </varlistentry>
         <varlistentry>
            <term>command_bind( nazwa_polecenia, callback )</term>
            <listitem>
               <para>
                  £±czy funkcjê <parameter>callback</parameter> z reakcj± na wykonanie polecenia.
                  Funkcja musi przyjmowaæ dwa argumenty: nazwê wpisanego
                  polecenia i argumenty mu przekazane.
               </para>
            </listitem>
         </varlistentry>
         <varlistentry>
            <term>variable_add( nazwa_zmiennej, pocz±tkowa_warto¶æ [, callback ])</term>
            <listitem>
               <para>
                  Dodaje zmienn± skryptow±, która bêdzie zapisywana w pliku
                  konfiguracyjnym ekg2. Opcjonalny parametr
                  <parameter>callback</parameter> mo¿e
                  zawieraæ funkcjê, która bêdzie wykonywana przy ka¿dej zmianie
                  warto¶ci dodawanej zmiennej.
                  Funkcja musi przyjmowaæ dwa argumenty: nazwê zmiennej i jej
                  now± warto¶æ.
               </para>
               <para>
                  Zmienne dodane metod± variable_add mo¿na odczytywaæ tak, jak
                  wszystkie inne ustawienia konfiguracyjne, tj. za pomoc±
                  s³ownika <varname>ekg.config</varname>
               </para>
            </listitem>
         </varlistentry>
         <varlistentry>
            <term>window_current()</term>
            <listitem>
               <para>
                  Zwraca obiekt <classname>window</classname> reprezentuj±cy bie¿±ce okno
               </para>
            </listitem>
         </varlistentry>
         <varlistentry>
            <term>window_get( nazwa )</term>
            <listitem>
               <para>
                  Zwraca obiekt window reprezentuj±cy okno o podanej nazwie.
                  Funkcja rozpoznaje tak¿e nazwy <literal>__current</literal> i
                  <literal>__status</literal>.
               </para>
            </listitem>
         </varlistentry>
         <varlistentry>
            <term>config</term>
            <listitem>
               <para>
                  S³ownik zawieraj±cy opcjê konfiguracji ekg (odczyt i zapis)
               </para>
            </listitem>
         </varlistentry>
      </variablelist>
      <variablelist>
         <title>Sta³e</title>
         <varlistentry>
            <term>MSGCLASS_MESSAGE</term>
            <listitem>
               <formalpara>
                  <title>typ wiadomo¶ci</title>
                  <para>
                     wiadomo¶æ
                  </para>
               </formalpara>
            </listitem>
         </varlistentry>
         <varlistentry>
            <term>MSGCLASS_CHAT</term>
            <listitem>
               <formalpara>
                  <title>typ wiadomo¶ci</title>
                  <para>
                     rozmowa ci±g³a
                  </para>
               </formalpara>
            </listitem>
         </varlistentry>
         <varlistentry>
            <term>MSGCLASS_SENT</term>
            <listitem>
               <formalpara>
                  <title>typ wiadomo¶ci</title>
                  <para>
                     wys³ana wiadomo¶æ
                  </para>
               </formalpara>
            </listitem>
         </varlistentry>
         <varlistentry>
            <term>MSGCLASS_SENT_CHAT</term>
            <listitem>
               <formalpara>
                  <title>typ wiadomo¶ci</title>
                  <para>
                     wys³ana wiadomo¶æ w ramach rozmowy ci±g³ej
                  </para>
               </formalpara>
            </listitem>
         </varlistentry>
         <varlistentry>
            <term>MSGCLASS_SYSTEM</term>
            <listitem>
               <formalpara>
                  <title>typ wiadomo¶ci</title>
                  <para>
                     wiadomo¶æ systemowa
                  </para>
               </formalpara>
            </listitem>
         </varlistentry>
         <varlistentry>
            <term>STATUS_NA</term>
            <listitem>
               <formalpara>
                  <title>stan</title>
                  <para>
                     Not Available (roz³±czony)
                  </para>
               </formalpara>
            </listitem>
         </varlistentry>
         <varlistentry>
            <term>STATUS_AVAIL</term>
            <listitem>
               <formalpara>
                  <title>stan</title>
                  <para>
                     Available (dostêpny)
                  </para>
               </formalpara>
            </listitem>
         </varlistentry>
         <varlistentry>
            <term>STATUS_AWAY</term>
            <listitem>
               <formalpara>
                  <title>stan</title>
                  <para>
                     Away (z dala od klawiatury)
                  </para>
               </formalpara>
            </listitem>
         </varlistentry>
         <varlistentry>
            <term>STATUS_AUTOAWAY</term>
            <listitem>
               <formalpara>
                  <title>stan</title>
                  <para>
                     Auto Away (automatyczny stan bezczynno¶ci)
                  </para>
               </formalpara>
            </listitem>
         </varlistentry>
         <varlistentry>
            <term>STATUS_INVISIBLE</term>
            <listitem>
               <formalpara>
                  <title>stan</title>
                  <para>
                     Invisible (niewidoczny)
                  </para>
               </formalpara>
            </listitem>
         </varlistentry>
         <varlistentry>
            <term>STATUS_XA</term>
            <listitem>
               <formalpara>
                  <title>stan</title>
                  <para>
                     Extended Away (niedostêpny)
                  </para>
               </formalpara>
            </listitem>
         </varlistentry>
         <varlistentry>
            <term>STATUS_DND</term>
            <listitem>
               <formalpara>
                  <title>stan</title>
                  <para>
                     Do Not Disturb (nie przeszkadzaæ)
                  </para>
               </formalpara>
            </listitem>
         </varlistentry>
         <varlistentry>
            <term>STATUS_FREE_FOR_CHAT</term>
            <listitem>
               <formalpara>
                  <title>stan</title>
                  <para>
                     Free for Chat (chêtny do rozmowy)
                  </para>
               </formalpara>
            </listitem>
         </varlistentry>
         <varlistentry>
            <term>STATUS_BLOCKED</term>
            <listitem>
               <formalpara>
                  <title>stan</title>
                  <para>
                     Blocked (zablokowany)
                  </para>
               </formalpara>
            </listitem>
         </varlistentry>
         <varlistentry>
            <term>STATUS_UNKNOWN</term>
            <listitem>
               <formalpara>
                  <title>stan</title>
                  <para>
                     Unknown (nieznany)
                  </para>
               </formalpara>
            </listitem>
         </varlistentry>
         <varlistentry>
            <term>STATUS_ERROR</term>
            <listitem>
               <formalpara>
                  <title>stan</title>
                  <para>
                     Error (b³±d)
                  </para>
               </formalpara>
            </listitem>
         </varlistentry>
         <varlistentry>
            <term>IGNORE_STATUS</term>
            <listitem>
               <formalpara>
                  <title>ignorowanie</title>
                  <para>
                     zmian stanu
                  </para>
               </formalpara>
            </listitem>
         </varlistentry>
         <varlistentry>
            <term>IGNORE_STATUS_DESCR</term>
            <listitem>
               <formalpara>
                  <title>ignorowanie</title>
                  <para>
                     stanów z opisem
                  </para>
               </formalpara>
            </listitem>
         </varlistentry>
         <varlistentry>
            <term>IGNORE_MSG</term>
            <listitem>
               <formalpara>
                  <title>ignorowanie</title>
                  <para>
                     wiadomo¶ci
                  </para>
               </formalpara>
            </listitem>
         </varlistentry>
         <varlistentry>
            <term>IGNORE_DCC</term>
            <listitem>
               <formalpara>
                  <title>ignorowanie</title>
                  <para>
                     po³±czeñ bezpo¶rednich (DCC)
                  </para>
               </formalpara>
            </listitem>
         </varlistentry>
         <varlistentry>
            <term>IGNORE_EVENTS</term>
            <listitem>
               <formalpara>
                  <title>ignorowanie</title>
                  <para>
                     zdarzeñ
                  </para>
               </formalpara>
            </listitem>
         </varlistentry>
         <varlistentry>
            <term>IGNORE_NOTIFY</term>
            <listitem>
               <formalpara>
                  <title>ignorowanie</title>
                  <para>
                     powiadomieñ
                  </para>
               </formalpara>
            </listitem>
         </varlistentry>
         <varlistentry>
            <term>IGNORE_ALL</term>
            <listitem>
               <formalpara>
                  <title>ignorowanie</title>
                  <para>
                     wszystkiego
                  </para>
               </formalpara>
            </listitem>
         </varlistentry>
         <varlistentry>
            <term>WATCH_READ</term>
            <listitem>
               <formalpara>
                  <title>watche</title>
                  <para>
                     odczyt
                  </para>
               </formalpara>
            </listitem>
         </varlistentry>
         <varlistentry>
            <term>WATCH_READ_LINE</term>
            <listitem>
               <formalpara>
                  <title>watche</title>
                  <para>
                     odczyt po lini
                  </para>
               </formalpara>
            </listitem>
         </varlistentry>
         <varlistentry>
            <term>WATCH_WRITE</term>
            <listitem>
               <formalpara>
                  <title>watche</title>
                  <para>
                     zapis
                  </para>
               </formalpara>
            </listitem>
         </varlistentry>
      </variablelist>
   </sect3>
   <sect3>
      <title>Klasa session</title>
      <variablelist>
         <title>Metody i pola obiektu klasy session</title>
         <varlistentry>
            <term>self</term>
            <listitem>
               <para>
                  S³ownikowy dostêp do konfiguracji sesji. 
               </para>
            </listitem>
         </varlistentry>
         <varlistentry>
            <term>connect()</term>
            <listitem>
               <para>
                  £±czy sesjê.
               </para>
            </listitem>
         </varlistentry>
         <varlistentry>
            <term>connected()</term>
            <listitem>
               <para>
                  Zwraca True je¶li sesja jest po³±czona, False wpp.
               </para>
            </listitem>
         </varlistentry>
         <varlistentry>
            <term>disconnect()</term>
            <listitem>
               <para>
                  Roz³±cza sesjê.
               </para>
            </listitem>
         </varlistentry>
         <varlistentry>
            <term>users()</term>
            <listitem>
               <para>
                  Zwraca listê obiektów u¿ytkowników na li¶cie danej
                  sesji.
               </para>
            </listitem>
         </varlistentry>
         <varlistentry>
            <term>user_get(nazwa)</term>
            <listitem>
               <para>
                  Zwraca obiekt klasy <classname>user</classname> o danym
                  identyfikatorze (<literal>gg:123</literal>,
                  <literal>jid:test@example.com</literal> itp.)
               </para>
            </listitem>
         </varlistentry>
         <varlistentry>
            <term>status()</term>
            <listitem>
               <para>
                  Zwraca tuple ( status, opis ), gdzie status jest jedn± ze
                  sta³ych okre¶laj±cych typ stanu. W przypadku braku opisu,
                  drug± warto¶ci± bêdzie None.
               </para>
            </listitem>
         </varlistentry>
         <varlistentry>
            <term>status_set( status [, opis ] )</term>
            <listitem>
               <para>
                  Ustawia status i ewentualnie opis. Status musi byæ jedn± ze
                  sta³ych opisuj±cych stan.
               </para>
            </listitem>
         </varlistentry>
      </variablelist>
   </sect3>
   <sect3>
      <title>Klasa user</title>
      <para>
         Obiekt zawiera atrybutowy dostêp do informacji o obiekcie:
      </para>
      <itemizedlist>
         <listitem>
            <formalpara>
               <title>
                  uid
               </title>
               <para>
                  identyfikator
               </para>
            </formalpara>
         </listitem>
         <listitem>
            <formalpara>
               <title>
                  nickname
               </title>
               <para>
                  ksywka
               </para>
            </formalpara>
         </listitem>
         <listitem>
            <formalpara>
               <title>
                  first_name
               </title>
               <para>
                  imiê
               </para>
            </formalpara>
         </listitem>
         <listitem>
            <formalpara>
               <title>
                  last_name
               </title>
               <para>
                  nazwisko
               </para>
            </formalpara>
         </listitem>
         <listitem>
            <formalpara>
               <title>
                  mobile
               </title>
               <para>
                  nr telefonu
               </para>
            </formalpara>
         </listitem>
         <listitem>
            <formalpara>
               <title>
                  status
               </title>
               <para>
                  Zwraca krotkê zawieraj±c± status i opis
               </para>
            </formalpara>
         </listitem>
         <listitem>
            <formalpara>
               <title>
                  resource
               </title>
               <para>
                  Zasób jabberowy u¿ytkownika
               </para>
            </formalpara>
         </listitem>
         <listitem>
            <formalpara>
               <title>
                  last_seen
               </title>
               <para>
                  Czas ostatniej dostêpno¶ci (timestamp)
               </para>
            </formalpara>
         </listitem>
         <listitem>
            <formalpara>
               <title>
                  groups()
               </title>
               <para>
                  metoda zwracaj±ca listê zawieraj±c± nazwy grup do których nale¿y
                  u¿ytkownik
               </para>
            </formalpara>
         </listitem>
         <listitem>
            <formalpara>
               <title>
                  ip
               </title>
               <para>
                  adres ip
               </para>
            </formalpara>
         </listitem>
         <listitem>
            <formalpara>
               <title>
                  last_ip
               </title>
               <para>
                  poprzedni adres ip
               </para>
            </formalpara>
         </listitem>
         <listitem>
            <formalpara>
               <title>
                  status_time
               </title>
               <para>
                  czas ostatniej zmiany statusu (timestamp)
               </para>
            </formalpara>
         </listitem>
         <listitem>
            <formalpara>
               <title>
                  last_status
               </title>
               <para>
                  krotka zawieraj±ca status i opis, kiedy osoba by³a ostatni
                  raz dostêpna
               </para>
            </formalpara>
         </listitem>
      </itemizedlist>
   </sect3>
   <sect3>
      <title>Klasa window</title>
      <variablelist>
         <title>Metody obiektu klasy window</title>
         <varlistentry>
            <term>switch_to()</term>
            <listitem>
               <para>
                  Prze³±cza widok na dane okno.
               </para>
            </listitem>
         </varlistentry>
         <varlistentry>
            <term>echo( str )</term>
            <listitem>
               <para>
                  Wy¶wietla napis w danym oknie.
               </para>
            </listitem>
         </varlistentry>
         <varlistentry>
            <term>echo_format( format, str )</term>
            <listitem>
               <para>
                  Wy¶wietla napis w podanym formacie
               </para>
            </listitem>
         </varlistentry>
         <varlistentry>
            <term>next</term>
            <listitem>
               <para>
                  Zwraca obiekt reprezentuj±cy nastêpne okno. Lista okien jest
                  "zawijana", tzn. wywo³anie metody next() na ostatnim oknie
                  zwróci obiekt pierwszego okna.
               </para>
            </listitem>
         </varlistentry>
         <varlistentry>
            <term>prev</term>
            <listitem>
               <para>
                  Zwraca obiekt reprezentuj±cy poprzednie okno. Lista okien jest
                  "zawijana", tzn. wywo³anie metody prev() na pierwszym oknie
                  zwróci obiekt ostatniego okna.
               </para>
            </listitem>
         </varlistentry>
         <varlistentry>
            <term>kill</term>
            <listitem>
               <para>
                  Zamyka okno. W tym momencie obiekt klasy window powinien byæ
                  usuniêty, gdy¿ nie mo¿na ju¿ go u¿ywaæ.
               </para>
            </listitem>
         </varlistentry>
      </variablelist>
   </sect3>
</sect2>
<sect2>
   <title>Obs³uga poleceñ i sygna³ów</title>
   <para>
      Skrypty w pythonie mo¿na "podpinaæ" do ró¿nych zdarzeñ. Mo¿e to byæ
      wykonanie funkcji co podany okres czasu (metoda timer_bind), poprzez
      wykonanie polecenia (command_bind) lub reakcja na sygna³ wydany przez
      ekg2 (handler_bind). We wszystkich przypadkach, drugim argumentem jest
      funkcja (nie nazwa, lecz sama funkcja - por. przyk³ad), która ma byæ
      wykonana. Pierwszym natomiast, odpowiednio interwa³, nazwa polecenia lub
      nazwa sygna³u. Poni¿ej zamieszczona jest lista zawieraj±ca obs³ugiwane
      obecnie sygna³y, oraz argumenty, które musi przyjmowaæ funkcja
      obs³uguj±ca sygna³.
   </para>
   <variablelist>
      <title>Sygna³y</title>
      <varlistentry>
         <term>protocol-message-received</term>
         <listitem>
            <para>
               Argumenty: session, id, mclass, text, time, ignore_level
            </para>
            <para>
               Wywo³ywana gdy ekg otrzymuje wiadomo¶æ.
            </para>
         </listitem>
      </varlistentry>
      <varlistentry>
         <term>protocol-message-sent</term>
         <listitem>
            <para>
               Argumenty: session, rcpts, text
            </para>
            <para>
               Wywo³ywana gdy u¿ytkownik wysy³a wiadomo¶æ. rcpts jest
               <emphasis>tekstow±</emphasis> reprezentacj± odbiorcy, dok³adnie
               tak± jak poda³ u¿ytkownik (pierwszy argument /msg, /chat, /query
               itd).
            </para>
         </listitem>
      </varlistentry>
      <varlistentry>
         <term>protocol-status</term>
         <listitem>
            <para>
               Argumenty: session, from, type, desc
            </para>
            <para>
               Wywo³ywana gdy kto¶ zmienia stan. nazwy parametrów powinny byæ
               zrozumia³e.  je¶li zwróci 0, zmiana stanu zostanie zignorowana.
               je¶li zwróci 2, zmiana stanu nie bêdzie ignorowana, ale nie
               zostanie wy¶wietlona. je¶li zwróci krotkê o takich samych
               argumentach jak funkcja, dane zostan± zmienione.
            </para>  
         </listitem>
      </varlistentry>
      <varlistentry>
         <term>protocol-status-own (NFY)</term>
         <listitem>
            <para>
               Argumenty: status, desc
            </para>
            <para>
               Wywo³ywana gdy klient zmienia stan. Je¶li zwróci 0, stan nie
               zostanie zmieniony.
            </para>
         </listitem>
      </varlistentry>
      <varlistentry>
         <term>ui-keypress</term>
         <listitem>
            <para>
               Argumenty: char
            </para>
            <para>
               Wywo³ywane w momencie wci¶niêcia przycisku. Argumentem jest kod
               wci¶niêtego klawisza.
            </para>
         </listitem>
      </varlistentry>
   </variablelist>
   <para>
      Oprócz sygna³ów, mo¿liwe jest zdefiniowanie dwóch funkcji, które s±
      rozpoznawane przez ekg2.
   </para>
   <variablelist>
      <varlistentry>
         <term>init()</term>
         <listitem>
            <para>
               Wywo³ywana gdy skrypt jest ³adowany. Je¶li ta funkcja zwróci 0,
               skrypt nie zostanie za³adowanych.
            </para>
         </listitem>
      </varlistentry>
      <varlistentry>
         <term>deinit()</term>
         <listitem>
            <para>
               Wywo³ywana gdy skrypt jest usuwany z pamiêci.
            </para>
         </listitem>
      </varlistentry>
   </variablelist>
</sect2>
<sect2>
   <title>Przyk³adowy skrypt</title>
   <programlisting role="python">
<![CDATA[
# -*- encoding: iso-8859-2 -*-

import ekg
import time

def status_handler(session, uid, status, desc):
    for sesja in ekg.sessions():
	if sesja.connected():
	    ekg.echo("sesja '%s' po³±czona" % (name,))
	    ekg.echo("status: "+sesja['status'])
	else:
	    ekg.echo("sesja '%s' nie jest po³±czona" % (name,))
    ekg.echo("Dosta³em status!")
    ekg.echo("Sesja : "+session)
    ekg.echo("UID   : "+uid)
    ekg.echo("Status: "+status)
    if desc:
	ekg.echo("Opis  : "+desc)
    sesja = ekg.session_get(session)
    ekg.echo('Lista userów sesji: '+", ".join(sesja.users()))
    user = sesja.user_get(uid)
    if user.last_status:
	ekg.echo(str(user.last_status))
	stat, des = user.last_status
	ekg.echo("Ostatni status: "+stat)
	if user.last_status[1]:
	    ekg.echo("Ostatni opis  : "+des)
    else:
	ekg.echo("Nie ma poprzedniego stanu - pewnie dopiero siê ³±czymy...")
    ekg.echo("IP: "+user.ip)
    ekg.echo("Grupy: "+", ".join(user.groups()))
    if status == ekg.STATUS_AWAY:
	ekg.echo("Chyba go nie ma...")
    if status == ekg.STATUS_XA:
	ekg.echo("Chyba bardzo go nie ma, to na grzyb mi taki status?. Po³ykam. *¶lurp*")
	return 0
    return 1

def message_handler(session, uid, type, text, sent_time, ignore_level):
    ekg.debug("[test script] some debug\n")
    ekg.echo("Dosta³em wiadomo¶æ!")
    ekg.echo("Sesja : "+session)
    ekg.echo("UID   : "+uid)
    if type == ekg.MSGCLASS_MESSAGE:
	ekg.echo("Typ   : msg")
    elif type == ekg.MSGCLASS_CHAT:
	ekg.echo("Typ   : chat")
    ekg.echo("Czas  : "+time.strftime("%a, %d %b %Y %H:%M:%S %Z", time.gmtime(sent_time)))
    ekg.echo("Ign   : "+str(ignore_level))
    ekg.echo("TxtLen: "+str(len(text)))
    if len(text) == 13:
	ekg.echo("Oj, ale pechowa liczba, nie odbieram")
	return 0
    return 1

def own_message_handler(session, target, text):
    ekg.debug("[test script] some debug\n")
    ekg.echo("Wysy³am wiadomo¶æ!")
    ekg.echo("Sesja : "+session)
    ekg.echo("Target: "+target)
    ekg.echo("TxtLen: "+str(len(text)))
    return 1

def connect_handler(session):
    ekg.echo("Po³±czono! Ale super! Mo¿na gadaæ!")
    ekg.echo("Sesja : "+session)
    if session[:3] == 'irc':
	struct = time.gmtime()
	if struct[3] >= 8 and struct[3] < 17:
	    ekg.echo('£adnie to tak ircowaæ w pracy? ;)')
    sesja = ekg.session_get(session)
    if sesja.connected():
	ekg.echo('Po³±czony!')
    else:
	ekg.echo('W tym miejscu jeszcze nie po³±czony')
    ekg.echo('Lista userów sesji: '+", ".join(sesja.users()))

def keypress(key):
    ekg.echo('nacisnales #"+ str(key));
    
def disconnect_handler(session):
    ekg.echo("£o, sesja %s nam pad³a" % (session,))
    ekg.echo("Wysy³amy smsa ¿e nam cu¶ pad³o...")

def foo_command(name, args):
    ekg.echo("Wywo³ane polecenie foo!")

def varchange(name, newval):
    ekg.echo("Zmienna %s zmieni³a warto¶æ na %s" % (name, newval) )
    
ekg.command_bind('foo', foo_command)
ekg.handler_bind('protocol-message-received', message_handler)
ekg.handler_bind('protocol-message-sent', own_message_handler)
ekg.handler_bind('protocol-status', status_handler)
ekg.handler_bind('protocol-connected', connect_handler)
ekg.handler_bind('protocol-disconnected', disconnect_handler)
ekg.handler_bind('ui-keypress', keypress)
ekg.variable_add('zmienna_testowa', 'warto¶æ', varchange)

]]>
   </programlisting>
</sect2>
<!--
vim: ft=docbk fileencoding=iso-8859-2
-->
